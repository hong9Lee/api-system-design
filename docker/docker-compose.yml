version: "3.8"

services:
  local-db:
    image: mysql:8-oracle
    container_name: local-database
    volumes:
      - ./local-db/conf:/etc/mysql/conf.d
      - ./local-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "23306:3306"
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_PASSWORD: 102030
    ulimits:
      nofile:
        soft: 20000
        hard: 40000

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: local-rabbitmq
    ports:
      - "25672:5672"
      - "35672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "test_user"
      RABBITMQ_DEFAULT_PASS: "test"
    networks:
      - local-net

  local-redis:
    image: redis:latest
    container_name: local-redis
    ports:
      - "26379:6379"  # 호스트의 26379 포트와 컨테이너의 6379 포트(기본 Redis 포트)를 매핑

  controller:
    image: ngrinder/controller:3.5.3
    platform: linux/amd64
    restart: always
    ports:
      - "9000:80"
      - "16001:16001"
      - "12000-12009:12000-12009"
    volumes:
      - ./ngrinder-controller:/opt/ngrinder-controller

  agent:
    image: ngrinder/agent:3.5.3
    platform: linux/amd64
    restart: always
    links:
      - controller


networks:
  local-net:
    driver: bridge
